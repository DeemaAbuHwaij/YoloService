name: Yolo Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REPO_URL: ${{ github.server_url }}/${{ github.repository }}.git
  REPO_NAME: ${{ github.event.repository.name }}

jobs:
  Deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/private_key
          chmod 600 ~/.ssh/private_key
          cat > ~/.ssh/config << EOF
          Host ec2
            HostName $EC2_HOST
            User $EC2_USERNAME
            IdentityFile ~/.ssh/private_key
            StrictHostKeyChecking no
          EOF

      - name: Force clone or reset latest repo on EC2
        run: |
          ssh ec2 << 'EOF'
          set -e
          if [ -d ~/${REPO_NAME} ]; then
            cd ~/${REPO_NAME}
            git fetch origin
            git reset --hard origin/main
            git clean -fd
          else
            git clone ${REPO_URL} ~/${REPO_NAME}
          fi
          EOF

      - name: Copy script and service file to EC2
        run: |
          scp deploy.sh yolo.service ec2:~/${REPO_NAME}/

      - name: Execute script on EC2
        run: |
          ssh ec2 "cd ~/${REPO_NAME} && ls -la && bash deploy.sh"

      - name: Debug EC2 files
        run: |
          ssh ec2 "cd ~/${REPO_NAME} && ls -la && cat deploy.sh"
