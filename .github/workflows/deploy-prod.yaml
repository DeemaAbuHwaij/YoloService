name: Yolo Deploy Prod

on:
  workflow_call:
    inputs:
      image:
        required: true
        type: string

    secrets:
      EC2_SSH_KEY:
        required: true
      YOLO_EC2_IP_PROD:
        required: true
      S3_BUCKET_NAME_PROD:
        required: true
      AWS_REGION:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Debug image name
        run: echo "🚀 Image passed to deploy: ${{ inputs.image }}"

      - name: Set image name output
        id: get-image
        run: |
          echo "image=${{ inputs.image }}" >> "$GITHUB_OUTPUT"

      - name: Create .env file
        run: |
          echo "IMG_NAME=${{ steps.get-image.outputs.image }}" > .env
          echo "S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME_PROD }}" >> .env
          echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> .env
          cat .env

      - name: SSH and deploy to YOLO Prod
        run: |
          echo "📁 Ensure remote dir exists"
          ssh -i key.pem -o StrictHostKeyChecking=no ubuntu@${{ secrets.YOLO_EC2_IP_PROD }} "mkdir -p /home/ubuntu/YoloService"

          echo "📤 Copying .env"
          scp -i key.pem -o StrictHostKeyChecking=no .env ubuntu@${{ secrets.YOLO_EC2_IP_PROD }}:/home/ubuntu/YoloService/.env

          echo "🚀 SSH into EC2 and deploy"
          ssh -i key.pem -o StrictHostKeyChecking=no ubuntu@${{ secrets.YOLO_EC2_IP_PROD }} << 'EOF'
            cd /home/ubuntu/YoloService

            if [ -d ".git" ]; then
              git checkout main
              git pull origin main
            else
              git clone --branch main https://github.com/${{ github.repository }} .
            fi

            docker-compose -f docker-compose.prod.yaml pull
            docker-compose -f docker-compose.prod.yaml up -d --build --remove-orphans
          
            curl -s http://localhost:8080/health || echo "⚠️ Health check failed"
          EOF
