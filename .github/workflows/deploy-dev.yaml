name: Yolo Deploy Dev

on:
  workflow_call:
    inputs:
      image:
        required: true
        type: string

    secrets:
      EC2_SSH_KEY:
        required: true
      YOLO_EC2_IP_DEV:
        required: true
      S3_BUCKET_NAME_DEV:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Download image name artifact (fallback)
        uses: actions/download-artifact@v4
        with:
          name: image-name
          path: ./
        continue-on-error: true

      - name: Setup SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Determine image name
        id: get-image
        run: |
          if [ -n "${{ inputs.image }}" ]; then
            IMAGE_NAME="${{ inputs.image }}"
            echo "✅ Using input image: $IMAGE_NAME"
          elif [ -f "image_name.txt" ]; then
            IMAGE_NAME=$(cat image_name.txt)
            echo "✅ Using artifact image: $IMAGE_NAME"
          else
            echo "❌ No image name found!"
            exit 1
          fi

          echo "image=$IMAGE_NAME" >> "$GITHUB_OUTPUT"

      - name: Create .env file
        run: |
          echo "IMG_NAME=${{ steps.get-image.outputs.image }}" > .env
          echo "S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME_DEV }}" >> .env
          echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> .env
          cat .env

      - name: SSH and deploy to YOLO Dev
        run: |
          echo "📁 Ensure remote dir exists"
          ssh -i key.pem -o StrictHostKeyChecking=no ubuntu@${{ secrets.YOLO_EC2_IP_DEV }} "mkdir -p /home/ubuntu/YoloService"

          echo "📤 Copying .env"
          scp -i key.pem -o StrictHostKeyChecking=no .env ubuntu@${{ secrets.YOLO_EC2_IP_DEV }}:/home/ubuntu/YoloServi_
